@page "/GestionarLibros"
@inject LibroService libroService

<section>
    <div class="container">
        <h2 style ="color: #333333;">Libros más prestados</h2>
        <div class="carousel">
            @foreach (var libro in librosPopulares)
            {
                <input type="radio" name="slides" id="slide-@libro.IdLibro" checked="@(libro == librosPopulares.First())" />
            }

            <ul class="carousel__slides">
                @foreach (var libro in librosPopulares)
                {
                    <li class="carousel__slide">
                        <figure>
                            <div class="book-info">
                                <img class="book-cover" src="data:image/png;base64,@Convert.ToBase64String(libro.Portada)" alt="Book Cover">
                                <div class="book-details">
                                    <p><strong>Libro:</strong> @libro.Titulo</p>
                                    <p><strong>Autor:</strong> @libro.Autor</p>
                                    <p><strong>Género:</strong> @libro.Genero</p>
                                    <p><strong>ISBN:</strong> @libro.ISBN</p>
                                    <p><strong>Veces Prestado:</strong> @libro.VecesPrestado</p>
                                </div>
                            </div>
                        </figure>
                    </li>
                }
            </ul>
            <NavLink class="nav-link" href="/libros">
                <button class="btn-agregar"><h2>Agregar Libro</h2></button>
            </NavLink>

            <ul class="carousel__thumbnails">
                @foreach (var libro in librosPopulares)
                {
                    <li>
                        <label for="slide-@libro.IdLibro">
                            <img src="data:image/png;base64,@Convert.ToBase64String(libro.Portada)" alt="Miniatura">
                        </label>
                    </li>
                }
            </ul>
        </div>
    </div>
</section>

@code {
    private List<Libro> librosPopulares = new List<Libro>();

    protected override async Task OnInitializedAsync()
    {
        librosPopulares = await ObtenerLibrosPopulares();
    }

    private async Task<List<Libro>> ObtenerLibrosPopulares()
    {
        // Supón que libroService.GetLibrosPopulares() consulta la base de datos y devuelve los libros ordenados por VecesPrestado
        return await libroService.GetLibrosPopulares(5); // Aquí estamos pidiendo los 5 libros más prestados
    }

    private void PrestarLibro(int idLibro)
    {
        Console.WriteLine($"Libro con ID {idLibro} ha sido prestado.");
        // Aquí podrías agregar la lógica para marcar el libro como prestado en la base de datos
    }
}
