@page "/GestionarUsuarios"

<div class="container-xl">
    <div class="table-responsive">
        <div class="table-wrapper">
            <div class="table-title">
                <div class="row">
                    <div class="col-sm-5">
                        <h2>Gestión de <b>Usuarios</b></h2>
                    </div>
                    <div class="col-sm-7">
                        <button class="btn btn-secondary" @onclick="MostrarFormularioAgregar"><h6>Nuevo usuario</h6></button>
                    </div>
                </div>
            </div>
            <table class="table table-striped table-hover">
                <thead>
                    <tr>
                        <th>#</th>
                        <th>Name</th>
                        <th>Date Created</th>
                        <th>Role</th>
                        <th>Status</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var usuario in Usuarios)
                    {
                            <tr>
                                <td>@usuario.Id</td>
                                <td><a href="#"><img src="@usuario.AvatarUrl" class="avatar" alt="Avatar"> @usuario.Nombre</a></td>
                                <td>@usuario.FechaCreacion.ToString("MM/dd/yyyy")</td>
                                <td>@usuario.Rol</td>
                                <td><span class="status @(usuario.Activo ? "text-success" : "text-warning")">&bull;</span> @(usuario.Activo ? "Active" : "Inactive")</td>
                                <td>
                                    <button class="btn btn-info" @onclick="() => VerDetallesUsuario(usuario)">Ver detalles</button>
                                    <button class="btn btn-danger" @onclick="() => ConfirmarEliminar(usuario)">Eliminar</button>
                                </td>
                            </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@if (MostrarFormulario)
{
        <div class="modal">
            <div class="modal-content">
                <h3>Agregar Nuevo Usuario</h3>
                <label>Nombre:</label>
                <input type="text" @bind="NuevoUsuario.Nombre" class="form-control" />
                <label>Rol:</label>
                <input type="text" @bind="NuevoUsuario.Rol" class="form-control" placeholder="Ejemplo: Usuario, Admin" />
                <label>Avatar URL:</label>
                <input type="text" @bind="NuevoUsuario.AvatarUrl" class="form-control" placeholder="URL de imagen" />
                <label>Estado:</label>
                <select @bind="NuevoUsuario.Activo" class="form-control">
                    <option value="true">Activo</option>
                    <option value="false">Inactivo</option>
                </select>
                <button class="btn btn-primary" @onclick="AgregarUsuario">Agregar</button>
                <button class="btn btn-secondary" @onclick="CerrarFormulario">Cancelar</button>
            </div>
        </div>
}

@code {
    public class Usuario
    {
        public int Id { get; set; }
        public string Nombre { get; set; }
        public string Rol { get; set; }
        public string AvatarUrl { get; set; }
        public DateTime FechaCreacion { get; set; }
        public bool Activo { get; set; }
    }

    private List<Usuario> Usuarios = new List<Usuario>
    {
        new Usuario { Id = 2, Nombre = "Carlos Hugo", Rol = "Admin", AvatarUrl = "https://avatars.githubusercontent.com/u/158307619?v=4", FechaCreacion = new DateTime(2024, 3, 11), Activo = false },
        // Agrega más usuarios según sea necesario
    };

    private bool MostrarFormulario = false;
    private Usuario NuevoUsuario = new Usuario();

    private void MostrarFormularioAgregar()
    {
        MostrarFormulario = true;
        NuevoUsuario = new Usuario
            {
                Id = Usuarios.Count > 0 ? Usuarios.Max(u => u.Id) + 1 : 1, // Asigna un ID único al nuevo usuario
                FechaCreacion = DateTime.Now
            };
    }

    private void CerrarFormulario()
    {
        MostrarFormulario = false;
    }

    private void AgregarUsuario()
    {
        if (!string.IsNullOrWhiteSpace(NuevoUsuario.Nombre))
        {
            Usuarios.Add(NuevoUsuario);
            NuevoUsuario = new Usuario(); // Reinicia el objeto para futuras entradas
            MostrarFormulario = false;
        }
    }

    private void VerDetallesUsuario(Usuario usuario)
    {
        // Lógica para mostrar detalles del usuario
        Console.WriteLine($"Detalles del usuario: {usuario.Nombre}");
    }

    private void ConfirmarEliminar(Usuario usuario)
    {
        // Lógica para confirmar eliminación
    }
}
