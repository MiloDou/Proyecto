@page "/"
@using System.Collections.Generic
@using BlazorWebAppMovies.Services
@inject LibroService libroService


<PageTitle>Home</PageTitle>

<div class="container">
    <header>
        <br>
        <h1 class="title">BIBLIOTECA<br>
            <span class="outline">Carlos Mérida</span>
        </h1>
        <br> 
        <!-- Barra de búsqueda sin autocompletado -->
        <div class="search-bar">
            <input type="text" placeholder="Buscar por Título, ISBN, Autor" @bind="searchQuery">
            <button @onclick="PerformSearch">→</button>
        </div>
    </header>
</div>
<div class="result-container">
        @if (librosEncontrados.Any())
        {
            <p style="color: #333333;">Resultados de busqueda para "@searchQuery"</p>
            @foreach (var libro in librosEncontrados)
            {
                <div class="card" >
                    <img src="data:image/jpeg;base64,@Convert.ToBase64String(libro.Portada)" alt="Portada del libro" class="card-image" />
                    <div class="card-content" style="background-color: #f9f9f9; border: 1px solid #ccc; padding: 15px; color: #333333;">
                        <h4>@libro.Titulo</h4>
                        <p>Autor: @libro.Autor</p>
                        <p>ISBN: @libro.ISBN</p>
                    </div>
                </div>
            }
        }
        else if (!string.IsNullOrWhiteSpace(searchQuery))
        {
            <p>No se encontraron resultados para "@searchQuery".</p>
        }
    </div>

@code {
    private List<Libro> librosEncontrados = new List<Libro>();

    private string searchQuery = "";
    private List<Libro> librosBuscados;

    private async Task PerformSearch()
    {
        var libros = await libroService.GetLibrosAsync();
        librosEncontrados = libros
            .Where(libro =>
                libro.ISBN.Contains(searchQuery, StringComparison.OrdinalIgnoreCase) ||
                libro.Titulo.Contains(searchQuery, StringComparison.OrdinalIgnoreCase) ||
                libro.Autor.Contains(searchQuery, StringComparison.OrdinalIgnoreCase))
            .ToList();
    }
}
