@page "/login"
@using MiParte.Models
@inject UsuarioService usuarioService
@inject NavigationManager navigationManager

    
    
    <div class="container">
    <h1>BIBLIOTECA CARLOS MÉRIDA</h1>
</div>


<h3 class="login-title">Login</h3>

<div class="login">
    <EditForm Model="@usuario" OnValidSubmit="@HandleLogin" class="login-form">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label for="username" class="form-label">Usuario:   </label>
            <InputText id="username" @bind-Value="usuario.Username" class="form-input login-input" />
        </div>

        <div class="form-group">
            <label for="pwd" class="form-label">Contraseña:</label>
            <InputText id="pwd" @bind-Value="usuario.Pwd" type="password" class="form-input login-input" />
        </div>

        <button type="submit" class="login-button login-button">Login</button>
    </EditForm>


        @if (!string.IsNullOrEmpty(errorMessage))
        {
            <p class="error-message">@errorMessage</p>
        }
   

</div>
@code {
    private Usuario usuario = new Usuario();
    private string errorMessage;

    private async Task HandleLogin()
    {
        try
        {
            var loggedInUser = await usuarioService.LoginAsync(usuario);
            navigationManager.NavigateTo("/"); // Redirige al inicio después del login
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
        }
    }
}
