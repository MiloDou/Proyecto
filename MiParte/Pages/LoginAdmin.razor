@page "/loginadmin"
@inject UsuarioService usuarioService
@inject NavigationManager navigationManager
@inject AuthenticationStateProviderService authStateProvider
@using MiParte.Models;

<div class="container">
    <h1>BIBLIOTECA CARLOS MÉRIDA</h1>

    <div class="login">
        <EditForm Model="@adminLogin" OnValidSubmit="@HandleLogin">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group">
                <label for="username" class="form-label">Username:</label>
                <InputText id="username" @bind-Value="adminLogin.Username" class="form-input" />
            </div>

            <div class="form-group">
                <label for="pwd" class="form-label">Password:</label>
                <InputText id="pwd" @bind-Value="adminLogin.Pwd" type="password" class="form-input" />
            </div>

            <button type="submit" class="login-button">Login</button>
        </EditForm>

        @if (!string.IsNullOrEmpty(errorMessage))
        {
                <p class="error-message">@errorMessage</p>
        }
    </div>
</div>

@code {
    private Usuario adminLogin = new Usuario();
    private string errorMessage;

    private async Task HandleLogin()
    {
        try
        {
            var loggedInUser = await usuarioService.LoginAsync(adminLogin);

            if (loggedInUser != null && loggedInUser.IsAdmin)
            {
                // Marcar al usuario como autenticado y redirigir
                authStateProvider.MarkUserAsAuthenticated(loggedInUser);
                navigationManager.NavigateTo("/gestionarusuarios");
            }
            else
            {
                errorMessage = "No tienes permisos de administrador.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Error al iniciar sesión: {ex.Message}";
        }
    }
}
