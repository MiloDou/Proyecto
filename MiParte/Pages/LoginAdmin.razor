@page "/loginadmin"
@inject UsuarioService usuarioService
@inject NavigationManager navigationManager
@using MiParte.Models;

<h3>Login Administrador</h3>

<EditForm Model="@adminLogin" OnValidSubmit="@HandleLogin">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="username" class="form-label">Username:</label>
        <InputText id="username" @bind-Value="adminLogin.Username" class="form-input" />
    </div>

    <div class="form-group">
        <label for="pwd" class="form-label">Password:</label>
        <InputText id="pwd" @bind-Value="adminLogin.Pwd" type="password" class="form-input" />
    </div>

    <button type="submit" class="login-button">Login</button>
</EditForm>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <p class="error-message">@errorMessage</p>
}

@code {
    private Usuario adminLogin = new Usuario();
    private string errorMessage;

    private async Task HandleLogin()
    {
        try
        {
            var loggedInUser = await usuarioService.LoginAsync(adminLogin);
            if (loggedInUser.IsAdmin)
            {
                navigationManager.NavigateTo("/crearusuario");
            }
            else
            {
                errorMessage = "No tienes permisos de administrador.";
                navigationManager.NavigateTo("/gestionarusuarios");
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Error al iniciar sesión: {ex.Message}";
        }
    }
}
